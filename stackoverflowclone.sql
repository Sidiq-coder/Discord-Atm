CREATE TABLE "users" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "username" varchar UNIQUE NOT NULL,
  "email" varchar UNIQUE NOT NULL,
  "password_hash" varchar NOT NULL,
  "display_name" varchar,
  "reputation" int DEFAULT 1,
  "about_me" text,
  "location" varchar,
  "website_url" varchar,
  "created_at" timestamp DEFAULT (now()),
  "last_login" timestamp
);

CREATE TABLE "posts" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "post_type_id" int NOT NULL,
  "user_id" int,
  "title" varchar,
  "body" text NOT NULL,
  "score" int DEFAULT 0,
  "view_count" int DEFAULT 0,
  "answer_count" int DEFAULT 0,
  "comment_count" int DEFAULT 0,
  "accepted_answer_id" int,
  "parent_id" int,
  "created_at" timestamp DEFAULT (now()),
  "updated_at" timestamp
);

CREATE TABLE "tags" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "name" varchar UNIQUE NOT NULL,
  "description" text,
  "created_at" timestamp DEFAULT (now())
);

CREATE TABLE "post_tags" (
  "post_id" int,
  "tag_id" int,
  PRIMARY KEY ("post_id", "tag_id")
);

CREATE TABLE "comments" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "post_id" int,
  "user_id" int,
  "content" text NOT NULL,
  "score" int DEFAULT 0,
  "created_at" timestamp DEFAULT (now())
);

CREATE TABLE "votes" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "user_id" int,
  "post_id" int,
  "vote_type" int,
  "created_at" timestamp DEFAULT (now())
);

CREATE TABLE "badges" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "name" varchar NOT NULL,
  "description" text,
  "badge_type" int,
  "created_at" timestamp DEFAULT (now())
);

CREATE TABLE "user_badges" (
  "user_id" int,
  "badge_id" int,
  "awarded_at" timestamp DEFAULT (now()),
  PRIMARY KEY ("user_id", "badge_id")
);

CREATE TABLE "bookmarks" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "user_id" int,
  "post_id" int,
  "created_at" timestamp DEFAULT (now())
);

CREATE UNIQUE INDEX ON "votes" ("user_id", "post_id");

CREATE UNIQUE INDEX ON "bookmarks" ("user_id", "post_id");

COMMENT ON COLUMN "posts"."title" IS 'Only for questions';

COMMENT ON COLUMN "posts"."accepted_answer_id" IS 'Only for questions';

COMMENT ON COLUMN "posts"."parent_id" IS 'For answers, references the question';

COMMENT ON COLUMN "votes"."vote_type" IS '1 for upvote, -1 for downvote';

COMMENT ON COLUMN "badges"."badge_type" IS '1: Gold, 2: Silver, 3: Bronze';

ALTER TABLE "posts" ADD FOREIGN KEY ("user_id") REFERENCES "users" ("id");

ALTER TABLE "posts" ADD FOREIGN KEY ("accepted_answer_id") REFERENCES "posts" ("id");

ALTER TABLE "posts" ADD FOREIGN KEY ("parent_id") REFERENCES "posts" ("id");

ALTER TABLE "post_tags" ADD FOREIGN KEY ("post_id") REFERENCES "posts" ("id");

ALTER TABLE "post_tags" ADD FOREIGN KEY ("tag_id") REFERENCES "tags" ("id");

ALTER TABLE "comments" ADD FOREIGN KEY ("post_id") REFERENCES "posts" ("id");

ALTER TABLE "comments" ADD FOREIGN KEY ("user_id") REFERENCES "users" ("id");

ALTER TABLE "votes" ADD FOREIGN KEY ("user_id") REFERENCES "users" ("id");

ALTER TABLE "votes" ADD FOREIGN KEY ("post_id") REFERENCES "posts" ("id");

ALTER TABLE "user_badges" ADD FOREIGN KEY ("user_id") REFERENCES "users" ("id");

ALTER TABLE "user_badges" ADD FOREIGN KEY ("badge_id") REFERENCES "badges" ("id");

ALTER TABLE "bookmarks" ADD FOREIGN KEY ("user_id") REFERENCES "users" ("id");

ALTER TABLE "bookmarks" ADD FOREIGN KEY ("post_id") REFERENCES "posts" ("id");
